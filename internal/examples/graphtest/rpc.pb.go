// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: graphtest/rpc.proto

package graphtest

import (
	_ "github.com/protobuf-orm/protobuf-orm/ormpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcEnabled struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcEnabled) Reset() {
	*x = RpcEnabled{}
	mi := &file_graphtest_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcEnabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcEnabled) ProtoMessage() {}

func (x *RpcEnabled) ProtoReflect() protoreflect.Message {
	mi := &file_graphtest_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcEnabled) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RpcEnabled) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcEnabled) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcEnabled) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type RpcEnabled_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 RpcEnabled_builder) Build() *RpcEnabled {
	m0 := &RpcEnabled{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type RpcCrud struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcCrud) Reset() {
	*x = RpcCrud{}
	mi := &file_graphtest_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcCrud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcCrud) ProtoMessage() {}

func (x *RpcCrud) ProtoReflect() protoreflect.Message {
	mi := &file_graphtest_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcCrud) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RpcCrud) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcCrud) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcCrud) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type RpcCrud_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 RpcCrud_builder) Build() *RpcCrud {
	m0 := &RpcCrud{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type RpcCrudExclude struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcCrudExclude) Reset() {
	*x = RpcCrudExclude{}
	mi := &file_graphtest_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcCrudExclude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcCrudExclude) ProtoMessage() {}

func (x *RpcCrudExclude) ProtoReflect() protoreflect.Message {
	mi := &file_graphtest_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcCrudExclude) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RpcCrudExclude) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcCrudExclude) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcCrudExclude) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type RpcCrudExclude_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 RpcCrudExclude_builder) Build() *RpcCrudExclude {
	m0 := &RpcCrudExclude{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type RpcDisabled struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcDisabled) Reset() {
	*x = RpcDisabled{}
	mi := &file_graphtest_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDisabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDisabled) ProtoMessage() {}

func (x *RpcDisabled) ProtoReflect() protoreflect.Message {
	mi := &file_graphtest_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcDisabled) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RpcDisabled) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcDisabled) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcDisabled) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type RpcDisabled_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 RpcDisabled_builder) Build() *RpcDisabled {
	m0 := &RpcDisabled{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

type RpcDisabledExplicit struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          int32                  `protobuf:"varint,1,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcDisabledExplicit) Reset() {
	*x = RpcDisabledExplicit{}
	mi := &file_graphtest_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDisabledExplicit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDisabledExplicit) ProtoMessage() {}

func (x *RpcDisabledExplicit) ProtoReflect() protoreflect.Message {
	mi := &file_graphtest_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcDisabledExplicit) GetId() int32 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *RpcDisabledExplicit) SetId(v int32) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcDisabledExplicit) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcDisabledExplicit) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

type RpcDisabledExplicit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *int32
}

func (b0 RpcDisabledExplicit_builder) Build() *RpcDisabledExplicit {
	m0 := &RpcDisabledExplicit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Id = *b.Id
	}
	return m0
}

var File_graphtest_rpc_proto protoreflect.FileDescriptor

const file_graphtest_rpc_proto_rawDesc = "" +
	"\n" +
	"\x13graphtest/rpc.proto\x12\tgraphtest\x1a\torm.proto\"/\n" +
	"\n" +
	"RpcEnabled\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x05B\x06\xea\x82\x16\x02(\x01R\x02id:\t\xca\xfc\x15\x05\x12\x03\x82\x01\x00\"+\n" +
	"\aRpcCrud\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x05B\x06\xea\x82\x16\x02(\x01R\x02id:\b\xca\xfc\x15\x04\x12\x02\x10\x01\"7\n" +
	"\x0eRpcCrudExclude\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x05B\x06\xea\x82\x16\x02(\x01R\x02id:\r\xca\xfc\x15\t\x12\a\x10\x01\x82\x01\x02\b\x01\"+\n" +
	"\vRpcDisabled\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x05B\x06\xea\x82\x16\x02(\x01R\x02id:\x04\xca\xfc\x15\x00\":\n" +
	"\x13RpcDisabledExplicit\x12\x16\n" +
	"\x02id\x18\x01 \x01(\x05B\x06\xea\x82\x16\x02(\x01R\x02id:\v\xca\xfc\x15\a\x12\x05\b\x01\x82\x01\x00BBZ@github.com/protobuf-orm/protobuf-orm/internal/examples/graphtestb\beditionsp\xe8\a"

var file_graphtest_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_graphtest_rpc_proto_goTypes = []any{
	(*RpcEnabled)(nil),          // 0: graphtest.RpcEnabled
	(*RpcCrud)(nil),             // 1: graphtest.RpcCrud
	(*RpcCrudExclude)(nil),      // 2: graphtest.RpcCrudExclude
	(*RpcDisabled)(nil),         // 3: graphtest.RpcDisabled
	(*RpcDisabledExplicit)(nil), // 4: graphtest.RpcDisabledExplicit
}
var file_graphtest_rpc_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_graphtest_rpc_proto_init() }
func file_graphtest_rpc_proto_init() {
	if File_graphtest_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_graphtest_rpc_proto_rawDesc), len(file_graphtest_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graphtest_rpc_proto_goTypes,
		DependencyIndexes: file_graphtest_rpc_proto_depIdxs,
		MessageInfos:      file_graphtest_rpc_proto_msgTypes,
	}.Build()
	File_graphtest_rpc_proto = out.File
	file_graphtest_rpc_proto_goTypes = nil
	file_graphtest_rpc_proto_depIdxs = nil
}
