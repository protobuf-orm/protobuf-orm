// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: orm/index.proto

package ormpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Index struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Disabled    bool                   `protobuf:"varint,1,opt,name=disabled"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Refs        *[]*Ref                `protobuf:"bytes,3,rep,name=refs"`
	xxx_hidden_Unique      bool                   `protobuf:"varint,6,opt,name=unique"`
	xxx_hidden_Immutable   bool                   `protobuf:"varint,8,opt,name=immutable"`
	xxx_hidden_Hidden      bool                   `protobuf:"varint,9,opt,name=hidden"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_orm_index_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_orm_index_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Index) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *Index) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Index) GetRefs() []*Ref {
	if x != nil {
		if x.xxx_hidden_Refs != nil {
			return *x.xxx_hidden_Refs
		}
	}
	return nil
}

func (x *Index) GetUnique() bool {
	if x != nil {
		return x.xxx_hidden_Unique
	}
	return false
}

func (x *Index) GetImmutable() bool {
	if x != nil {
		return x.xxx_hidden_Immutable
	}
	return false
}

func (x *Index) GetHidden() bool {
	if x != nil {
		return x.xxx_hidden_Hidden
	}
	return false
}

func (x *Index) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Index) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Index) SetRefs(v []*Ref) {
	x.xxx_hidden_Refs = &v
}

func (x *Index) SetUnique(v bool) {
	x.xxx_hidden_Unique = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Index) SetImmutable(v bool) {
	x.xxx_hidden_Immutable = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Index) SetHidden(v bool) {
	x.xxx_hidden_Hidden = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *Index) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Index) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Index) HasUnique() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Index) HasImmutable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Index) HasHidden() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Index) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Disabled = false
}

func (x *Index) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Index) ClearUnique() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Unique = false
}

func (x *Index) ClearImmutable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Immutable = false
}

func (x *Index) ClearHidden() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Hidden = false
}

type Index_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Disabled  *bool
	Name      *string
	Refs      []*Ref
	Unique    *bool
	Immutable *bool
	// If the index is unique and this field is true,
	// the schema will be written as a unique index,
	// but it will not be treated as a key in the graph.
	// In other words, this index will be excluded
	// from messages like GetRequest.
	Hidden *bool
}

func (b0 Index_builder) Build() *Index {
	m0 := &Index{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Refs = &b.Refs
	if b.Unique != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Unique = *b.Unique
	}
	if b.Immutable != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Immutable = *b.Immutable
	}
	if b.Hidden != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Hidden = *b.Hidden
	}
	return m0
}

var File_orm_index_proto protoreflect.FileDescriptor

const file_orm_index_proto_rawDesc = "" +
	"\n" +
	"\x0form/index.proto\x12\x03orm\x1a\rorm/ref.proto\"\xa3\x01\n" +
	"\x05Index\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabled\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\x04refs\x18\x03 \x03(\v2\b.orm.RefR\x04refs\x12\x16\n" +
	"\x06unique\x18\x06 \x01(\bR\x06unique\x12\x1c\n" +
	"\timmutable\x18\b \x01(\bR\timmutable\x12\x16\n" +
	"\x06hidden\x18\t \x01(\bR\x06hiddenB,Z*github.com/protobuf-orm/protobuf-orm/ormpbb\beditionsp\xe8\a"

var file_orm_index_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_orm_index_proto_goTypes = []any{
	(*Index)(nil), // 0: orm.Index
	(*Ref)(nil),   // 1: orm.Ref
}
var file_orm_index_proto_depIdxs = []int32{
	1, // 0: orm.Index.refs:type_name -> orm.Ref
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_orm_index_proto_init() }
func file_orm_index_proto_init() {
	if File_orm_index_proto != nil {
		return
	}
	file_orm_ref_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orm_index_proto_rawDesc), len(file_orm_index_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orm_index_proto_goTypes,
		DependencyIndexes: file_orm_index_proto_depIdxs,
		MessageInfos:      file_orm_index_proto_msgTypes,
	}.Build()
	File_orm_index_proto = out.File
	file_orm_index_proto_goTypes = nil
	file_orm_index_proto_depIdxs = nil
}
