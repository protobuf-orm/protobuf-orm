// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: orm/rpc.proto

package ormpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcAdd struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Disabled    bool                   `protobuf:"varint,1,opt,name=disabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcAdd) Reset() {
	*x = RpcAdd{}
	mi := &file_orm_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAdd) ProtoMessage() {}

func (x *RpcAdd) ProtoReflect() protoreflect.Message {
	mi := &file_orm_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcAdd) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *RpcAdd) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcAdd) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcAdd) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Disabled = false
}

type RpcAdd_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Disabled *bool
}

func (b0 RpcAdd_builder) Build() *RpcAdd {
	m0 := &RpcAdd{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	return m0
}

type RpcGet struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Disabled    bool                   `protobuf:"varint,1,opt,name=disabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcGet) Reset() {
	*x = RpcGet{}
	mi := &file_orm_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGet) ProtoMessage() {}

func (x *RpcGet) ProtoReflect() protoreflect.Message {
	mi := &file_orm_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcGet) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *RpcGet) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcGet) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcGet) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Disabled = false
}

type RpcGet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Disabled *bool
}

func (b0 RpcGet_builder) Build() *RpcGet {
	m0 := &RpcGet{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	return m0
}

type RpcPatch struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Disabled    bool                   `protobuf:"varint,1,opt,name=disabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcPatch) Reset() {
	*x = RpcPatch{}
	mi := &file_orm_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPatch) ProtoMessage() {}

func (x *RpcPatch) ProtoReflect() protoreflect.Message {
	mi := &file_orm_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcPatch) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *RpcPatch) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcPatch) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcPatch) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Disabled = false
}

type RpcPatch_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Disabled *bool
}

func (b0 RpcPatch_builder) Build() *RpcPatch {
	m0 := &RpcPatch{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	return m0
}

type RpcErase struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Disabled    bool                   `protobuf:"varint,1,opt,name=disabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RpcErase) Reset() {
	*x = RpcErase{}
	mi := &file_orm_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcErase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcErase) ProtoMessage() {}

func (x *RpcErase) ProtoReflect() protoreflect.Message {
	mi := &file_orm_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RpcErase) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *RpcErase) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *RpcErase) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RpcErase) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Disabled = false
}

type RpcErase_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Disabled *bool
}

func (b0 RpcErase_builder) Build() *RpcErase {
	m0 := &RpcErase{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	return m0
}

var File_orm_rpc_proto protoreflect.FileDescriptor

const file_orm_rpc_proto_rawDesc = "" +
	"\n" +
	"\rorm/rpc.proto\x12\x03orm\"$\n" +
	"\x06RpcAdd\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabled\"$\n" +
	"\x06RpcGet\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabled\"&\n" +
	"\bRpcPatch\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabled\"&\n" +
	"\bRpcErase\x12\x1a\n" +
	"\bdisabled\x18\x01 \x01(\bR\bdisabledB,Z*github.com/protobuf-orm/protobuf-orm/ormpbb\beditionsp\xe8\a"

var file_orm_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_orm_rpc_proto_goTypes = []any{
	(*RpcAdd)(nil),   // 0: orm.RpcAdd
	(*RpcGet)(nil),   // 1: orm.RpcGet
	(*RpcPatch)(nil), // 2: orm.RpcPatch
	(*RpcErase)(nil), // 3: orm.RpcErase
}
var file_orm_rpc_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_orm_rpc_proto_init() }
func file_orm_rpc_proto_init() {
	if File_orm_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orm_rpc_proto_rawDesc), len(file_orm_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orm_rpc_proto_goTypes,
		DependencyIndexes: file_orm_rpc_proto_depIdxs,
		MessageInfos:      file_orm_rpc_proto_msgTypes,
	}.Build()
	File_orm_rpc_proto = out.File
	file_orm_rpc_proto_goTypes = nil
	file_orm_rpc_proto_depIdxs = nil
}
